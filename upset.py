# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog, QGridLayout, QMainWindow ,QSizePolicy
from PyQt5.QtGui import QPixmap
from PyQt5.QtGui import QCursor
import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import os
import jdatetime
import json
import sys
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(QtWidgets.QWidget):
    def setupUi(self, MainWindow):
        self.setMouseTracking(True)
        # layouts
        layouts = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 16px;
            border-radius: 7x;
            margin: 1px 1px;
            padding: 1px;
                }'''
        layouts_up = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 16px;
            border-radius: 7px;
            margin: 1px 1px;
            padding: 1px;
            background-color: rgba(0, 100, 0, 0.4);
                }'''
        layouts_down = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 16px;
            border-radius: 7px;
            margin: 10px 1px;
            padding: 1px;
            background-color: rgba(100, 0, 0, 0.5);
                }'''
        layoutsgreetings = '''*{
            color: 'black';
            font-family: 'Arial';
            font-weight: 400;
            font-size: 22px;
            border-radius: 12px;
            padding: 3px;
            background: transparent;
            background-color: rgba(0, 100, 0, 0.4);
                            }'''
        layoutsclock = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 24px;
            border-radius: 12px;
            margin: 1px 1px;
            padding: 7px;
                }'''
        layoutsL_S = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 13px;
            border-radius: 7px;
            margin: 0px 0px 0px 0px;
            padding: 0px;
                }'''
        layoutsL_SDOWN = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 13px;
            border-radius: 7px;
            margin: 0px 0px 0px 0px;
            padding: 0px;
            background-color: rgba(100, 0, 0, 0.5);
                }'''
        layoutsL_SUP = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 13px;
            border-radius: 7px;
            margin: 0px 0px 0px 0px;
            padding: 0px;
            background-color: rgba(0, 100, 0, 0.5);
                }'''
        # end layouts
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1068, 632)
        MainWindow.setStyleSheet('''*{
            }''')
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(740, 60, 280, 311))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_54 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_54.setObjectName("label_54")
        self.label_54.setStyleSheet(layouts)
        self.verticalLayout.addWidget(self.label_54)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(740, 400, 280, 141))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_53 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_53.setObjectName("label_53")
        self.label_53.setStyleSheet(layouts)
        self.verticalLayout_2.addWidget(self.label_53)
        # start of dep 2
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(60, 130, 300, 371))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_10 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_10.setObjectName("label_10")
        self.label_10.setStyleSheet(layouts)
        # self.label_10.sizepolicy

        self.gridLayout.addWidget(self.label_10, 2, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setObjectName("label")
        self.label.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label, 0, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_6.setObjectName("label_6")
        self.label_6.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_6, 5, 2, 1, 1)
        self.label_18 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_18.setObjectName("label_18")
        self.label_18.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_18, 3, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_9.setObjectName("label_9")
        self.label_9.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_9, 1, 1, 1, 1)
        self.label_17 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_17.setObjectName("label_17")
        self.label_17.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_17, 2, 0, 1, 1)
        self.label_19 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_19.setObjectName("label_19")
        self.label_19.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_19, 4, 0, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_14.setObjectName("label_14")
        self.label_14.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_14, 6, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.label_2.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_2, 1, 2, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_13.setObjectName("label_13")
        self.label_13.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_13, 5, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_12.setStyleSheet(layouts)

        self.gridLayout.addWidget(self.label_12, 4, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_5.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_5, 4, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_3.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_3, 2, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_4.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_4, 3, 2, 1, 1)
        self.label_16 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_16.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_16, 1, 0, 1, 1)
        self.label_15 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_15.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_15, 0, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_8.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_8, 0, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_7.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_7, 6, 2, 1, 1)
        self.label_20 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_20.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_20, 5, 0, 1, 1)
        self.label_21 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_21.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_21, 6, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_11.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_11, 3, 1, 1, 1)
        self.label_45 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.label_45.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_45, 7, 0, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_46.setStyleSheet(layouts)
        
        self.gridLayout.addWidget(self.label_46, 7, 1, 1, 1)
        self.label_47 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_47.setStyleSheet(layouts_down)
        
        self.gridLayout.addWidget(self.label_47, 7, 2, 1, 1)

        # end of department
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(410, 130, 300, 371))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_35 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_35.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_35, 3, 1, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_26.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_26, 5, 2, 1, 1)
        self.label_29 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_29.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_29, 2, 2, 1, 1)
        self.label_37 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_37.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_37, 1, 0, 1, 1)
        self.label_23 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_23.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_23, 2, 1, 1, 1)
        self.label_42 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_42.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_42, 6, 0, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_31.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_31, 3, 2, 1, 1)
        self.label_40 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_40.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_40, 4, 0, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_27.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_27, 4, 1, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_30.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_30, 1, 1, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        # self.label_22.setMinimumSize(QtCore.QSize(82, 0))
        self.label_22.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_22, 1, 2, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_32.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_32, 0, 1, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_24.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_24, 5, 1, 1, 1)
        self.label_38 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_38.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_38, 2, 0, 1, 1)
        self.label_39 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_39.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_39, 3, 0, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_34.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_34, 6, 1, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_33.setStyleSheet(layouts_down)
        def printt(self):
            print("wooba")
        self.gridLayout_2.addWidget(self.label_33, 6, 2, 1, 1)
        self.label_36 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_36.setStyleSheet(layouts)
        # self.label_36.mousePressEvent(self.pushButton.click)
        # self.pushButton_36 = QtWidgets.QPushButton(self.centralwidget)
        # self.pushButton_36.setGeometry(QtCore.QRect(400, 330, 40, 20))
        # self.pushButton_36.

        self.gridLayout_2.addWidget(self.label_36, 0, 0, 1, 1)
        self.label_41 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_41.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_41, 5, 0, 1, 1)
        self.label_28 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_28.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_28, 4, 2, 1, 1)
        self.label_48 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_48.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_48, 7, 0, 1, 1)
        self.label_49 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_49.setStyleSheet(layouts)
        
        self.gridLayout_2.addWidget(self.label_49, 7, 1, 1, 1)
        self.label_50 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_50.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_50, 7, 2, 1, 1)
        self.label_25 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.label_25.setStyleSheet(layouts_down)
        
        self.gridLayout_2.addWidget(self.label_25, 0, 2, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(860, 330, 158, 22))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setStyleSheet(
                        '''*{
                    color: 'black';
                    border: 1px solid '#808080';
                    font-family: 'Arial';
                    font-size: 9px;
                    border-radius: 8px;
                    margin: 1px 1px;
                    padding: 1px;
                    background: transparent;
                    background-color: rgba(100, 100, 100, 0.4);
                        }
                        *:hover{
                    color: 'black';
                    border: 1px solid '#808080';
                    font-family: 'Arial';
                    font-size: 12px;
                    border-radius: 8px;
                    margin: 1px 1px;
                    padding: 1px;
                    background: transparent;
                    background-color: rgba(100, 100, 100, 0.9);
                        }''')
        self.pushButton.hide()
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(860, 330, 1, 1))
        self.lineEdit.setObjectName("lineEdit")
        # self.lineEdit.hide()
        self.lineEdit.setStyleSheet('''*{
                                        border-radius: 8px;
                                    }''')
        self.lineEdit.returnPressed.connect(self.pushButton.click)


        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(60, 510, 651, 83))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_51 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_51.setStyleSheet(layouts)
        
        self.verticalLayout_3.addWidget(self.label_51)
        # self.label_51.closeEvent(a0=)
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(740, 550, 280, 41))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_52 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_52.setStyleSheet(layouts)
        
        self.verticalLayout_4.addWidget(self.label_52)

        # start of dep main
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(60, 69, 650, 51))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_72 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_72.setStyleSheet(layoutsL_S)
        self.label_72.hide()
        # self.gridLayout_3.addWidget(self.label_72, 1, 4, 0, 0)
        self.label_69 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_69.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_69, 1, 1, 1, 1)
        self.label_60 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_60.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_60, 0, 5, 1, 1)
        self.label_61 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_61.setStyleSheet(layoutsL_S)
        self.label_61.hide()
        # self.gridLayout_3.addWidget(self.label_61, 0, 4, 0, 0)
        self.label_56 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_56.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_56, 1, 9, 1, 1)
        self.label_59 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_59.setStyleSheet(layoutsL_S)
        self.label_59.hide()
        # self.gridLayout_3.addWidget(self.label_59, 0, 6, 0, 0)
        self.label_70 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_70.setStyleSheet(layoutsL_S)
        self.label_70.hide()
        # self.gridLayout_3.addWidget(self.label_70, 1, 2, 0, 0)
        self.label_68 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_68.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_68, 1, 0, 1, 1)
        self.label_65 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_65.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_65, 0, 0, 1, 1)
        self.label_66 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_66.setStyleSheet(layoutsL_S)
        self.label_66.hide()
        # self.gridLayout_3.addWidget(self.label_66, 1, 8, 0, 0)
        self.label_67 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_67.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_67, 1, 7, 1, 1)
        self.label_62 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_62.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_62, 0, 3, 1, 1)
        self.label_57 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_57.setStyleSheet(layoutsL_S)
        self.label_57.hide()
        # self.gridLayout_3.addWidget(self.label_57, 0, 8, 0, 0)
        self.label_63 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_63.setStyleSheet(layoutsL_S)
        self.label_63.hide()
        # self.gridLayout_3.addWidget(self.label_63, 0, 2, 0, 0)
        self.label_73 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_73.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_73, 1, 5, 1, 1)
        self.label_64 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_64.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_64, 0, 1, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_55.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_55, 0, 9, 1, 1)
        self.label_71 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_71.setStyleSheet(layoutsL_S)
        
        self.gridLayout_3.addWidget(self.label_71, 1, 3, 1, 1)
        self.label_58 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_58.setStyleSheet(layoutsL_SDOWN)
        
        self.gridLayout_3.addWidget(self.label_58, 0, 7, 1, 1)
        self.label_74 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_74.setStyleSheet(layoutsL_S)
        self.label_74.hide()
        # self.gridLayout_3.addWidget(self.label_74, 1, 6, 0, 0)
        # end of dep main


        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(800, 10, 161, 44))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_43 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_43.setStyleSheet(layoutsclock)
        
        
        self.verticalLayout_5.addWidget(self.label_43)
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(59, 10, 650, 41))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_44 = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.label_44.setStyleSheet(layoutsgreetings)
        
        self.verticalLayout_6.addWidget(self.label_44)
        MainWindow.setCentralWidget(self.centralwidget)
        
        #set clock
        self.timer = QTimer(self)
        # layout.addWidget(self.label_43)
        self.timer.singleShot(1,self.timerr)
        self.timer.timeout.connect(self.timerr)
        self.timer.start(1000)
        # self.timer.
        self.timermain = QTimer(self)
        # layout.addWidget(self.label_43)
        self.timermain.singleShot(1,self.upset)
        self.timermain.timeout.connect(self.upsetline)
        self.timermain.start(10000)

        # self.timer2 = QTimer(self)
        # # layout.addWidget(self.label_43)
        # self.timer2.timeout.connect(self.upsetline)
        # self.timer2.start(5000)
        # end of clock
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1068, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # self.timer.
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        self.label_54.setText(_translate("MainWindow", "     تصویر"))
        self.label_53.setText(_translate("MainWindow", "     اطلاعات"))
        self.label_10.setText(_translate("MainWindow", ""))
        self.label.setText(_translate("MainWindow", ""))
        self.label_6.setText(_translate("MainWindow", ""))
        self.label_18.setText(_translate("MainWindow", ""))
        self.label_9.setText(_translate("MainWindow", ""))
        self.label_17.setText(_translate("MainWindow", ""))
        self.label_19.setText(_translate("MainWindow", ""))
        self.label_14.setText(_translate("MainWindow", ""))
        self.label_2.setText(_translate("MainWindow", ""))
        self.label_13.setText(_translate("MainWindow", ""))
        self.label_12.setText(_translate("MainWindow", ""))
        self.label_5.setText(_translate("MainWindow", ""))
        self.label_3.setText(_translate("MainWindow", ""))
        self.label_4.setText(_translate("MainWindow", ""))
        self.label_16.setText(_translate("MainWindow", ""))
        self.label_15.setText(_translate("MainWindow", ""))
        self.label_8.setText(_translate("MainWindow", ""))
        self.label_7.setText(_translate("MainWindow", ""))
        self.label_20.setText(_translate("MainWindow", ""))
        self.label_21.setText(_translate("MainWindow", ""))
        self.label_11.setText(_translate("MainWindow", ""))
        self.label_45.setText(_translate("MainWindow", ""))
        self.label_46.setText(_translate("MainWindow", ""))
        self.label_47.setText(_translate("MainWindow", ""))
        self.label_35.setText(_translate("MainWindow", ""))
        self.label_26.setText(_translate("MainWindow", ""))
        self.label_29.setText(_translate("MainWindow", ""))
        self.label_37.setText(_translate("MainWindow", ""))
        self.label_23.setText(_translate("MainWindow", ""))
        self.label_42.setText(_translate("MainWindow", ""))
        self.label_31.setText(_translate("MainWindow", ""))
        self.label_40.setText(_translate("MainWindow", ""))
        self.label_27.setText(_translate("MainWindow", ""))
        self.label_30.setText(_translate("MainWindow", ""))
        self.label_22.setText(_translate("MainWindow", ""))
        self.label_32.setText(_translate("MainWindow", ""))
        self.label_24.setText(_translate("MainWindow", ""))
        self.label_38.setText(_translate("MainWindow", ""))
        self.label_39.setText(_translate("MainWindow", ""))
        self.label_34.setText(_translate("MainWindow", ""))
        self.label_33.setText(_translate("MainWindow", ""))
        self.label_36.setText(_translate("MainWindow", ""))
        self.label_41.setText(_translate("MainWindow", ""))
        self.label_28.setText(_translate("MainWindow", ""))
        self.label_48.setText(_translate("MainWindow", ""))
        self.label_49.setText(_translate("MainWindow", ""))
        self.label_50.setText(_translate("MainWindow", ""))
        self.label_25.setText(_translate("MainWindow", ""))
        self.pushButton.setText(_translate("MainWindow", "شروع"))
        self.pushButton.clicked.connect(self.upset)
        self.label_51.setText(_translate("MainWindow", ""))
        self.label_52.setText(_translate("MainWindow", ""))
        self.label_72.setText(_translate("MainWindow", ""))
        self.label_69.setText(_translate("MainWindow", ""))
        self.label_60.setText(_translate("MainWindow", ""))
        self.label_61.setText(_translate("MainWindow", ""))
        self.label_56.setText(_translate("MainWindow", ""))
        self.label_59.setText(_translate("MainWindow", ""))
        self.label_70.setText(_translate("MainWindow", ""))
        self.label_68.setText(_translate("MainWindow", ""))
        self.label_65.setText(_translate("MainWindow", ""))
        self.label_66.setText(_translate("MainWindow", ""))
        self.label_67.setText(_translate("MainWindow", ""))
        self.label_62.setText(_translate("MainWindow", ""))
        self.label_57.setText(_translate("MainWindow", ""))
        self.label_63.setText(_translate("MainWindow", ""))
        self.label_73.setText(_translate("MainWindow", ""))
        self.label_64.setText(_translate("MainWindow", ""))
        self.label_55.setText(_translate("MainWindow", ""))
        self.label_71.setText(_translate("MainWindow", ""))
        self.label_58.setText(_translate("MainWindow", ""))
        self.label_74.setText(_translate("MainWindow", ""))
        self.label_43.setText(_translate("MainWindow", "clock"))
        self.label_44.setText(_translate("MainWindow", "greeting"))

    def timerr(self):
        time = jdatetime.datetime.now()
        second = f'{time.second}'
        if len(second)==2:
            second = time.second
        else:
            second = f'0{time.second}'
        minute = f'{time.minute}'
        if len(minute)==2:
            minute = time.minute
        else:
            minute = f'0{time.minute}'
        hour = f'{time.hour}'
        if len(hour)==2:
            hour = time.hour
        else:
            hour = f'0{time.hour}'

        self.label_43.setText(f'{hour} : {minute} : {second}')
    def upsetline(self):
        layouts = '''*{
            color: 'black';
            border: 1px solid '#808080';
            font-family: 'Arial';
            font-size: 16px;
            border-radius: 7px;
            margin: 1px 1px;
            padding: 1px;
                }'''
        # self.label_54.setPixmap(QPixmap(""))
        self.label_54.setText("     تصویر")
        self.label_54.setStyleSheet(layouts)
        self.label_53.setStyleSheet(layouts)
        self.label_53.setText("     اطلاعات")




    def upset(self):
            def enterEvent(self, event):
               print("Enter:", self.objectName())
 
            def leaveEvent(self, event):
                print("Leave:", self.objectName())
 
            # layouts
            layouts = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 16px;
                border-radius: 7px;
                margin: 1px 1px;
                padding: 1px;
                    }'''
            layouts_up = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 16px;
                border-radius: 7px;
                margin: 1px 1px;
                padding: 1px;
                background-color: rgba(0, 100, 0, 0.4);
                    }'''
            layouts_down = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 16px;
                border-radius: 7px;
                margin: 1px 1px;
                padding: 1px;
                background-color: rgba(100, 0, 0, 0.5);
                    }'''
            layoutsgreetings = '''*{
                color: 'black';
                font-family: 'Arial';
                font-weight: 400;
                font-size: 22px;
                border-radius: 7px;
                padding: 3px;
                background: transparent;
                background-color: rgba(0, 100, 0, 0.4);
                                }'''
            layoutsclock = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 24px;
                border-radius: 7px;
                margin: 1px 1px;
                padding: 7px;
                    }'''
            layoutsL_S = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 13px;
                border-radius: 7px;
                margin: 0px 0px 0px 0px;
                padding: 0px;
                    }'''
            layoutsL_SDOWN = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 13px;
                border-radius: 7px;
                margin: 0px 0px 0px 0px;
                padding: 0px;
                background-color: rgba(100, 0, 0, 0.5);
                    }'''
            layoutsL_SUP = '''*{
                color: 'black';
                border: 1px solid '#808080';
                font-family: 'Arial';
                font-size: 13px;
                border-radius: 7px;
                margin: 0px 0px 0px 0px;
                padding: 0px;
                background-color: rgba(0, 100, 0, 0.5);
                    }'''
            # end layouts
            # self.timer2.stop()
            # self.timer2 = QTimer(self)
            # self.timer2.stop()
            # layout.addWidget(self.label_43)
            # self.timer2.timeout.connect(self.upsetline)
            # self.timer2.start(10000)
            # self.timer2.destroyed()
            # self.timer2.singleShot(10000,self.upsetline)
            # self.line = self.lineEdit
            self.lineEdit.show()
            # LINEEDIT GEOGRAPHY
            self.pushButton.hide()
            self.lineEdit.setGeometry(QtCore.QRect(740, 375, 280, 21))
            # self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(750, 40, 481, 281))
            time = jdatetime.datetime.now()
            inday = time.day
            inmonth = time.month
            inyear = time.year
            try:
                with open('datadaily.json') as json_filedaily:
                    datadaily = json.load(json_filedaily)
                with open('data.json') as outfile:
                    data = json.load(outfile)
                datadaily['0'] = [{"ID":data[index]['ID'],"class":data[index]['class'],"time":0,"today":0,"repeat":0} for index in range(len(data))]
                with open('datadaily.json', 'w+') as outfiledaily:
                    json.dump(datadaily, outfiledaily)
                with open('daily.json') as dailys:
                    daily = json.load(dailys)
            except:
                daily={}
                with open('daily.json','w+') as dailys:
                    json.dump(daily,dailys)
                with open('data.json') as outfile:
                    data = json.load(outfile)
                datadaily = {}
                with open('datadaily.json', 'w+') as outfiledaily:
                    json.dump(datadaily, outfiledaily)
                datadaily['0'] = [{"ID":data[index]['ID'],"class":data[index]['class'],"time":0,"today":0,"repeat":0} for index in range(len(data))]
                with open('datadaily.json', 'w+') as outfiledaily:
                    json.dump(datadaily, outfiledaily)
                # print(datadaily[0])
            true = 1
            o=0
            number_of_class = []
            for i in range(len(datadaily['0'])):
                # print(datadaily['0'][i]['class'])
                if datadaily['0'][i]['class'] not in number_of_class:
                    number_of_class.append(datadaily['0'][i]['class'])
            # print(number_of_class)

            # print(number_of_class)
            for i in range(len(number_of_class)):
                if number_of_class[i]=="":
                    number_of_class.pop(i)
                    break
            # print(number_of_class)
            try:
                if datadaily[f'{inyear}-{inmonth}-{inday}'] != []:
                    pass
            except:
                datadaily[f'{inyear}-{inmonth}-{inday}'] = datadaily['0']

            try:
                if daily[f'{inyear}-{inmonth}-{inday}'] != []:
                    pass
            except:
                daily['0'] = [{"people":[]}]
                daily[f'{inyear}-{inmonth}-{inday}'] = [{f'{number_of_class[i]}':[] for i in range(len(number_of_class))}]


            with open('data.json') as outfile:
                data = json.load(outfile)

            in_pass = self.lineEdit.text()
            self.lineEdit.clear()
            for student in range(len(datadaily[f'{inyear}-{inmonth}-{inday}'])):
                    # if datadaily['0'][student]['ID']==in_pass:
                if len(data[student]['personalcode'])==1:
                    # print("d")
                    if int(data[student]['personalcode'])==0:
                        pass
                    if int(data[student]['personalcode'])==1:
                        # self.label_55.setStyleSheet(layoutsL_SUP)
                        self.label_56.setText(f'{data[student]["family"]}')
                    if int(data[student]['personalcode'])==2:
                        # self.label_58.setStyleSheet(layoutsL_SUP)
                        self.label_67.setText(f'{data[student]["family"]}')
                    if int(data[student]['personalcode'])==3:
                        # self.label_60.setStyleSheet(layoutsL_SUP)
                        self.label_73.setText(f'{data[student]["family"]}')
                    if int(data[student]['personalcode'])==4:
                        # self.label_62.setStyleSheet(layoutsL_SUP)
                        self.label_71.setText(f'{data[student]["family"]}')
                    if int(data[student]['personalcode'])==5:
                        # self.label_64.setStyleSheet(layoutsL_SUP)
                        self.label_69.setText(f'{data[student]["family"]}')
                    if int(data[student]['personalcode'])==6:
                        # self.label_65.setStyleSheet(layoutsL_SUP)
                        self.label_68.setText(f'{data[student]["family"]}')
                    # if int(data[student]['personalcode'])==7:
                    #     self.label_66.setStyleSheet(layoutsL_SUP)
                    #     self.label_57.setText(f'{data[student]["family"]}')
                    # if int(data[student]['personalcode'])==8:
                    #     self.label_66.setStyleSheet(layoutsL_SUP)
                    #     self.label_57.setText(f'{data[student]["family"]}')
                    # if int(data[student]['personalcode'])==9:
                    #     self.label_66.setStyleSheet(layoutsL_SUP)
                    #     self.label_57.setText(f'{data[student]["family"]}')
                    # if int(data[student]['personalcode'])==1:
                if len(data[student]['personalcode'])==3:
                    # print("2")
                    if data[student]['personalcode']==number_of_class[0]:
                        # self.label_25.setStyleSheet(layouts_up)
                        self.label_32.setText(f'{data[student]["family"]}')
                        pass
                    elif data[student]['personalcode']==number_of_class[1]:
                        # self.label_22.setStyleSheet(layouts_up)
                        self.label_30.setText(f'{data[student]["family"]}')
                        pass
                    elif data[student]['personalcode']==number_of_class[2]:
                        # self.label_29.setStyleSheet(layouts_up)
                        self.label_23.setText(f'{data[student]["family"]}')
                        pass
                    elif data[student]['personalcode']==number_of_class[3]:
                        # pass
                        # self.label_31.setStyleSheet(layouts_up)
                        self.label_35.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[4]:
                        # pass
                        # self.label_28.setStyleSheet(layouts_up)
                        self.label_27.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[5]:
                        # pass
                        # self.label_26.setStyleSheet(layouts_up)
                        self.label_24.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[6]:
                        # pass
                        # self.label_33.setStyleSheet(layouts_up)
                        self.label_34.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[7]:
                        # pass
                        # self.label_50.setStyleSheet(layouts_up)
                        self.label_49.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[8]:
                        # pass
                        # self.label.setStyleSheet(layouts_up)
                        self.label_8.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[9]:
                        # pass
                        # self.label_2.setStyleSheet(layouts_up)
                        self.label_9.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[10]:
                        # pass
                        # self.label_3.setStyleSheet(layouts_up)
                        self.label_10.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[11]:
                        # pass
                        # self.label_4.setStyleSheet(layouts_up)
                        self.label_11.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[12]:
                        # pass
                        # self.label_5.setStyleSheet(layouts_up)
                        self.label_12.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[13]:
                        # in_pass
                        # self.label_6.setStyleSheet(layouts_up)
                        self.label_13.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[14]:
                        # pass
                        # self.label_7.setStyleSheet(layouts_up)
                        self.label_14.setText(f'{data[student]["family"]}')
                    elif data[student]['personalcode']==number_of_class[15]:
                        # pass
                        # self.label_47.setStyleSheet(layouts_up)
                        self.label_46.setText(f'{data[student]["family"]}')
                    # elif data[student]['personalcode']==number_of_class[16]:
                        # pass
                        # self.label_47.setStyleSheet(layouts_up)



            if in_pass!="":
                for student in range(len(datadaily[f'{inyear}-{inmonth}-{inday}'])):
                    if datadaily['0'][student]['ID']==in_pass:
                        if len(data[student]['personalcode'])==1:
                            # print("d")
                            if int(data[student]['personalcode'])==1:
                                self.label_55.setStyleSheet(layoutsL_SUP)
                                self.label_56.setText(f'{data[student]["family"]}')
                            if int(data[student]['personalcode'])==2:
                                self.label_58.setStyleSheet(layoutsL_SUP)
                                self.label_67.setText(f'{data[student]["family"]}')
                            if int(data[student]['personalcode'])==3:
                                self.label_60.setStyleSheet(layoutsL_SUP)
                                self.label_73.setText(f'{data[student]["family"]}')
                            if int(data[student]['personalcode'])==4:
                                self.label_62.setStyleSheet(layoutsL_SUP)
                                self.label_71.setText(f'{data[student]["family"]}')
                            if int(data[student]['personalcode'])==5:
                                self.label_64.setStyleSheet(layoutsL_SUP)
                                self.label_69.setText(f'{data[student]["family"]}')
                            if int(data[student]['personalcode'])==6:
                                self.label_65.setStyleSheet(layoutsL_SUP)
                                self.label_68.setText(f'{data[student]["family"]}')
                            # if int(data[student]['personalcode'])==7:
                            #     self.label_66.setStyleSheet(layoutsL_SUP)
                            #     self.label_57.setText(f'{data[student]["family"]}')
                            # if int(data[student]['personalcode'])==8:
                            #     self.label_66.setStyleSheet(layoutsL_SUP)
                            #     self.label_57.setText(f'{data[student]["family"]}')
                            # if int(data[student]['personalcode'])==9:
                            #     self.label_66.setStyleSheet(layoutsL_SUP)
                            #     self.label_57.setText(f'{data[student]["family"]}')
                            # if int(data[student]['personalcode'])==1:

                        # for checking personalcode for teacher
                        if len(data[student]['personalcode'])==3:
                            # print("2")
                            if data[student]['personalcode']==number_of_class[0]:
                                self.label_25.setStyleSheet(layouts_up)
                                self.label_32.setText(f'{data[student]["family"]}')
                                pass
                            elif data[student]['personalcode']==number_of_class[1]:
                                self.label_22.setStyleSheet(layouts_up)
                                self.label_30.setText(f'{data[student]["family"]}')
                                pass
                            elif data[student]['personalcode']==number_of_class[2]:
                                self.label_29.setStyleSheet(layouts_up)
                                self.label_23.setText(f'{data[student]["family"]}')
                                pass
                            elif data[student]['personalcode']==number_of_class[3]:
                                # pass
                                self.label_31.setStyleSheet(layouts_up)
                                self.label_35.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[4]:
                                # pass
                                self.label_28.setStyleSheet(layouts_up)
                                self.label_27.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[5]:
                                # pass
                                self.label_26.setStyleSheet(layouts_up)
                                self.label_24.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[6]:
                                # pass
                                self.label_33.setStyleSheet(layouts_up)
                                self.label_34.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[7]:
                                # pass
                                self.label_50.setStyleSheet(layouts_up)
                                self.label_49.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[8]:
                                # pass
                                self.label.setStyleSheet(layouts_up)
                                self.label_8.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[9]:
                                # pass
                                self.label_2.setStyleSheet(layouts_up)
                                self.label_9.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[10]:
                                # pass
                                self.label_3.setStyleSheet(layouts_up)
                                self.label_10.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[11]:
                                # pass
                                self.label_4.setStyleSheet(layouts_up)
                                self.label_11.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[12]:
                                # pass
                                self.label_5.setStyleSheet(layouts_up)
                                self.label_12.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[13]:
                                # in_pass
                                self.label_6.setStyleSheet(layouts_up)
                                self.label_13.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[14]:
                                # pass
                                self.label_7.setStyleSheet(layouts_up)
                                self.label_14.setText(f'{data[student]["family"]}')
                            elif data[student]['personalcode']==number_of_class[15]:
                                # pass
                                self.label_47.setStyleSheet(layouts_up)
                                self.label_46.setText(f'{data[student]["family"]}')
                        if len(data[student]["class"])==3:
                            datadaily[f'{inyear}-{inmonth}-{inday}'][student]["today"]=1
                            datadaily[f'{inyear}-{inmonth}-{inday}'][student]["time"]=f'{time.hour}.{time.minute}'
                            datadaily[f'{inyear}-{inmonth}-{inday}'][student]["repeat"]+=1
                            from pathlib import Path
                            my_file = Path(f'{data[student]["filename"]}')
                            if my_file.is_file():
                                self.pixmap = QPixmap(data[student]['filename'])
                                # print(data[student]['filename'])
                                self.pixmap_resized = self.pixmap.scaled(320, 425, QtCore.Qt.KeepAspectRatio)
                                self.label_54.setPixmap(self.pixmap_resized)
                            else:
                                self.label_54.setText("     تصویر موجود نیست ")
                            self.label_54.setStyleSheet(
                                    '''*{
                            border: 2px solid '#BC006C';
                            border-radius: 12px;
                            margin: 2px 2px;
                            padding: 6px;
                                }''')
                            self.label_53.setText('نام  :'
                                    +str(data[student]['name'])+' '+str(data[student]['family'])+'\n ساعت ورود:  '+f'{time.hour}:{time.minute}'+'\n'+ 'پایه ی: '+str(data[student]['class']))

                            cl = data[student]['class']
                            # print(cl)
                            try:
                                # for i in range(len(daily["er"])):
                                if data[student]['ID'] not in daily["0"][0]['people']:
                                    daily['0'][0]['people'].append(data[student]['ID'])
                                    # count = len(daily['0'][0]['people'])
                                    # print(daily['0'][0]['people'])
                                    # print("error")
                                    if data[student]['personalcode']!='10':
                                        # print("error2")
                                        # this is just to breack the point
                                        # daily['0'][0]['people'].drop()
                                        self.quit()
                                        # pass
                                    # print(daily['0'][0]['people'])
                                    # print(len(daily['0'][0]['people']))
                                    # if daily[f'{inyear}-{inmonth}-{inday}'][f'{cl}'] != []:
                                    daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}'].append(data[student]["ID"])
                                # if len(data[student]['class'])==3:
                                # print("2")
                                    if data[student]['class']==number_of_class[0]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_36.setText(f'{len(f)}')
                                        self.label_36.enterEvent(print("sd"))
                                        pass
                                    elif data[student]['class']==number_of_class[1]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_37.setText(f'{len(f)}')
                                    elif data[student]['class']==number_of_class[2]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_38.setText(f'{len(f)}')
                                    elif data[student]['class']==number_of_class[3]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_39.setText(f'{len(f)}')
                                    elif data[student]['class']==number_of_class[4]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_40.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[5]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_42.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[6]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_42.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[7]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_48.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[8]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_15.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[9]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_16.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[10]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_17.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[11]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_18.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[12]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_19.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[13]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_20.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[14]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_21.setText(f'{f}')
                                    elif data[student]['class']==number_of_class[15]:
                                        f=daily[f'{inyear}-{inmonth}-{inday}'][-1][f'{cl}']
                                        # self.label_25.setStyleSheet(layouts_up)
                                        self.label_45.setText(f'{f}')
                                # elif data[student]['personalcode']==number_of_class[16]:
                                    # pass
                                    # self.label_47.setStyleSheet(layouts_up)
                                        # daily[f'{inyear}-{inmonth}-{inday}']["er"].append(data[student]['ID'])
                                    # else:
                                        # daily[f'{inyear}-{inmonth}-{inday}'][f'{cl}']=1
                                        # daily[f'{inyear}-{inmonth}-{inday}'][] = []
                                        # daily[f'{inyear}-{inmonth}-{inday}']["er"].append(data[student]['ID'])
                                else:
                                    pass
                            except:pass
                                # daily[f'{inyear}-{inmonth}-{inday}'][f'{cl}']=1
                                # daily[f'{inyear}-{inmonth}-{inday}']['er'] = []
                                # daily[f'{inyear}-{inmonth}-{inday}']["er"].append(data[student]['ID'])
                            # for i in number_of_class:

                            # self.label_53.setStyleSheet('''*{
                            #         color: 'black';
                            #         border: 2px solid '#BC006C';
                            #         font-family: 'Arial';
                            #         font-size: 32px;
                            #         border-radius: 12px;
                            #         margin: 2px 2px;
                            #         padding: 6px;
                            #         background-color:'green';
                            #     }''')
                            # self.label_3.setText(" ")
                            self.label_53.setStyleSheet(
                                '''*{
                            color: 'black';
                            border: 2px solid '#BC006C';
                            font-family: 'Arial';
                            font-size: 16px;
                            border-radius: 12px;
                            margin: 1px 1px;
                            padding: 1px; 
                                }''')
            else:
                # self.pushButton.show()
                # self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(750, 40, 481, 111))
                # o+=1
                # if o == 3:
                true=0
            with open('daily.json', 'w+') as dailys:
                json.dump(daily, dailys)

            with open('datadaily.json', 'w+') as outfile:
                json.dump(datadaily, outfile)

            try:
                with open('datadailys.json') as json_filedailys:
                    datadailys = json.load(json_filedailys)
                datadailys = [{"ID":data[index]['ID'],"today":[]} for index in range(len(data))]

            except:
                datadailys = []
                with open('datadailys.json', 'w+') as outfiledailys:
                    json.dump(datadailys, outfiledailys)
                datadailys = [{"ID":data[index]['ID'],"today":[]} for index in range(len(data))]
            for ins in range(len(datadaily[f'{inyear}-{inmonth}-{inday}'])):
            	if datadaily[f'{inyear}-{inmonth}-{inday}'][ins]["today"]==0:
            		datadailys[ins]['today'].append(f'{inyear}-{inmonth}-{inday}')





            with open('datadailys.json', 'w+') as outfiledailys:
                json.dump(datadailys, outfiledailys)
            # print(n)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    sys.exit(app.exec_())