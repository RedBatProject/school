# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'search.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog, QGridLayout, QMainWindow
from PyQt5.QtGui import QPixmap
from PyQt5.QtGui import QCursor
import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import json
class PhotoLabel(QLabel):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.setAlignment(Qt.AlignCenter)
        self.setStyleSheet('''
        QLabel {
            border: 4px dashed #aaa;
        }''')

    def setPixmap(self, *args, **kwargs):
        super().setPixmap(*args, **kwargs)
        self.setStyleSheet('''
        QLabel {
            border: none;
        }''')


class Template(QWidget):

    def __init__(self):
        super().__init__()
        self.photo = PhotoLabel()
        btn = QPushButton('Browse')
        btn.clicked.connect(self.open_image)
        btn2 = QPushButton('Ok')
        btn2.clicked.connect(self.close)
        grid = QGridLayout(self)
        grid.addWidget(btn, 1, 0)
        grid.addWidget(btn2, 3, 0)
        grid.addWidget(self.photo, 2, 0)
        self.setAcceptDrops(True)
        self.resize(300, 200)


    def open_image(self, filename=None):
        if not filename:
            filename, _ = QFileDialog.getOpenFileName(self, 'عکس جدید را وارد کنید و یا خالی بگذارید :', QDir.currentPath(), 'Images (*.png *.jpg)')
            if not filename:
                return
        self.photo.setPixmap(QPixmap(filename))
        # print(filename)
        return(filename)

class Ui_MainWindow(QtWidgets.QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(713, 434)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(530, 50, 171, 53))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setStyleSheet(
        '''*{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            border-radius: 12px;
            font-weight: 900;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.4);

        }
        *:hover{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            font-weight: 900;
            border-radius: 12px;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.9);
        }''')
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(530, 140, 171, 53))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setStyleSheet(
        '''*{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            border-radius: 12px;
            font-weight: 900;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.4);

        }
        *:hover{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            font-weight: 900;
            border-radius: 12px;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.9);
        }''')
        self.labelS = QtWidgets.QLabel(self.centralwidget)
        self.labelS.setGeometry(QtCore.QRect(20, 20, 371, 371))
        self.labelS.setWordWrap(True)
        self.labelS.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.labelS.setObjectName("labelS")
        self.labelS.setStyleSheet(
                        '''*{
                    color: 'black';
                    border: 2px solid fff;
                    font-family: 'Arial';
                    font-size: 22px;
                    border-radius: 12px;
                    margin: 2px 2px;
                    padding: 6px; 
                        }''')
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(530, 240, 171, 53))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.setStyleSheet(
        '''*{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            border-radius: 12px;
            font-weight: 900;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.4);

        }
        *:hover{
            color: 'black';
            font-family: 'Arial';
            font-size: 22px;
            font-weight: 900;
            border-radius: 12px;
            background: transparent;
            background-color: rgba(100, 100, 100, 0.9);
        }''')
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1052, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "جست و جو"))
        # self.pushButton.setText(_translate("MainWindow", "جست و جو با کد ملی"))
        # self.pushButton.clicked.connect(self.search_code)
        self.pushButton.setText(_translate("MainWindow", "جست و جو با نام"))
        self.pushButton.clicked.connect(self.search_name)
        self.pushButton_2.setText(_translate("MainWindow", "جست و جو با کارت"))
        self.pushButton_2.clicked.connect(self.search_id)
        self.pushButton_3.setText(_translate("MainWindow", "تغییر اطلاعات"))
        self.pushButton_3.clicked.connect(self.change)
    
    def change(self):
        persons = []
        b=0
        with open('data.json') as json_file:
            data = json.load(json_file)
            # print(data)
            # print(len(data))
        password, done3 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'کارت را قرار دهید و یا کد را وارد کنید.')
        name, done1 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'نام خود را وارد کنید:')
        family, done1 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'فامیل مورد نظر را وارد کنید.')
        for index in range(len(data)):
            if data[index]['ID']==password or data[index]['name']==name and data[index]['family']==family:
                persons.append(data[index])
                b=index
                # break
                # print(data[index])
        if persons==[]:
            self.labelS.setText("این کارت شناسایی به کسی تعلق ندارد.")
        else:
            for person in persons:     
                self.labelS.setText('نام و نام خانوادگی :'
                    +str(person['name'])+' '+str(person['family'])+'\n'+'تلفن: '
                    +str(person['tell'])+'\n کد ملی: '+str(person['code'])+'\n کد عبور: '+str(person['ID']))

        # for perso in data:
        #     if perso['ID']==password or perso['name']==name and perso['family']==family:
        #         persons.append(perso)
        # if persons==[]:
        #     self.labelS.setText("این کارت شناسایی به کسی تعلق ندارد.")
        # else:
        #     for person in persons:     
        #         self.labelS.setText('نام و نام خانوادگی :'
        #             +str(person['name'])+' '+str(person['family'])+'\n'+'تلفن: '
        #             +str(person['tell'])+'\n کد ملی: '+str(person['code'])+'\n کد عبور: '+str(person['ID']))

        name, done1 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'نام جدید را وارد کنید و یا خالی بگذارید:')

        family, done2 = QtWidgets.QInputDialog.getText(
        self, 'Input Dialog','نام خانوادگی جدید را وارد کنید و یا خالی بگذارید:')

        tell, done3 = QtWidgets.QInputDialog.getText(
            self, 'Input telephone', 'شماره تلفن جدید را وارد کنید و یا خالی بگذارید:')
        code, done3 = QtWidgets.QInputDialog.getText(
            self, 'Input telephone', 'کد ملی جدید را وارد کنید و یا خالی بگذارید:')

        # langs =['C', 'c++', 'Java', 'Python', 'Javascript']
        password , done4 = QtWidgets.QInputDialog.getText(
        self, 'put youre card', 'شماره کارت جدید را وارد کنید و یا کارت جدید را روی دستگاه بگذارید را وارد کنید و یا خالی بگذارید:')
        gui = Template()
        p = gui.open_image()
        print(data[b])
        if password!='':
            data[b]['ID']=password
            print(password)
        if name!='':
            data[b]['name']=name
            print(name)
        if family!='':
            data[b]['family']=family
            print(family)
        if code!='':
            data[b]['code']=code
            print(code)
        if tell!='':
            data[b]['tell']=tell
            print(tell)
        if p!='':
            data[b]['filename']=p
        print(data[b])
        with open('data.json', 'w+') as outfile:
            json.dump(data, outfile)



    def search_id(self):
        persons = []
        with open('data.json') as json_file:
            data = json.load(json_file)

        password, done3 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'کارت را قرار دهید و یا کد را وارد کنید.')
        # family, done1 = QtWidgets.QInputDialog.getText(
            # self, 'Input Dialog', 'فامیل مورد نظر را وارد کنید.')
        for perso in data:
            if perso['ID']==password:
                persons.append(perso)
        if persons==[]:
            self.labelS.setText("این کارت شناسایی به کسی تعلق ندارد.")
        else:
            for person in persons:     
                self.labelS.setText('نام و نام خانوادگی :'
                                    +str(person['name'])+' '+str(person['family'])+'\n'+'تلفن: '
                                    +str(person['tell'])+'\n کد ملی: '+str(person['code'])+'\n کد عبور: '+str(person['ID']))
    def search_code(self):
        persons = []
        with open('data.json') as json_file:
            data = json.load(json_file)

        name, done1 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'کد ملی مورد نظر را وارد کنید')
        # family, done1 = QtWidgets.QInputDialog.getText(
            # self, 'Input Dialog', 'فامیل مورد نظر را وارد کنید.')
        for perso in data:
            if perso['code']==name:
                persons.append(perso)
        if persons==[]:
            self.labelS.setText("این نکد ملیوجود ندارد.")
        else:
            for person in persons:     
                self.labelS.setText('نام و نام خانوادگی :'
                                    +str(person['name'])+' '+str(person['family'])+'\n'+'تلفن: '
                                    +str(person['tell'])+'\n کد ملی: '+str(person['code'])+'\n کد عبور: '+str(person['ID']))
            # else:
                # self.labelS.setText("این نام وجود ندارد.")
    def search_name(self):
        persons = []
        tex = ""
        with open('data.json') as json_file:
            data = json.load(json_file)

        name, done1 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'نام خود را وارد کنید:')
        family, done2 = QtWidgets.QInputDialog.getText(
            self, 'Input Dialog', 'فامیل مورد نظر را وارد کنید.')
        for perso in data:
            if perso['name']==name and perso['family']==family:
                persons.append(perso)
        if persons==[]:
            self.labelS.setText("این نام وجود ندارد.")
        else:
            for person in persons:
            	tex+=('نام و نام خانوادگی :'+str(person['name'])+' '+str(person['family'])+'\n'+'تلفن: '+str(person['tell'])+'\n کد ملی: '+str(person['code'])+'\n کد عبور: '+str(person['ID']+"\n\n"))
            self.labelS.setText(tex)
            # else:
                # self.labelS.setText("این نام وجود ندارد.")
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    # ui.time()
    MainWindow.show()

    sys.exit(app.exec_())
